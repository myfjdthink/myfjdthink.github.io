(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{477:function(s,e,t){s.exports=t.p+"assets/img/-1495698476220.8054b1a8.png"},478:function(s,e,t){s.exports=t.p+"assets/img/-1495698511451.eb603159.png"},479:function(s,e,t){s.exports=t.p+"assets/img/-1495698573491.49a6df55.png"},631:function(s,e,t){"use strict";t.r(e);var n=t(2),a=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"typescript-与-mongoose-的最佳实践"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-与-mongoose-的最佳实践"}},[s._v("#")]),s._v(" Typescript 与 Mongoose 的最佳实践")]),s._v(" "),e("h2",{attrs:{id:"update"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[s._v("#")]),s._v(" Update")]),s._v(" "),e("p",[s._v("2019-11-21 更新：")]),s._v(" "),e("p",[s._v("这篇文章写于 2017 年，有些过时了，现在 typescript + mongoose 也有些开源实现了，建议使用以下开源项目：")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/szokodiakos/typegoose",target:"_blank",rel:"noopener noreferrer"}},[s._v("typegoose"),e("OutboundLink")],1),s._v(" ： 使用 class 来定义mongoose 的 Schema。")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://typeorm.io/#/",target:"_blank",rel:"noopener noreferrer"}},[s._v("typeorm"),e("OutboundLink")],1),s._v(" ：应该是目前 Node 业界最好的 orm，但它主要是面向 sql 类数据库，对 mongodb 的支持欠佳")]),s._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("p",[s._v("mongoose 是 node.js 里操作 mongodb 的最好的 orm 工具。")]),s._v(" "),e("p",[s._v("typescript 则是带了 type 的 js 超集。")]),s._v(" "),e("p",[s._v("在开发过程中经常会碰到写错字段名的问题，只有到了运行阶段才能发现（或许也没发现。。。），使用 typescript 可以达到以下目的：")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("智能提示，不会输错字段名啦，当然这个取决于你的 IDE 是否支持 typescript。")])]),s._v(" "),e("li",[e("p",[s._v("类型检查，错误的类型定义可以在编译期发现。\n接下来就看看这两个东西怎么配合吧。")])])]),s._v(" "),e("p",[s._v("完整的 Express + Typescript + Mongoose 的 Demo 可以参考之前的文章 ："),e("a",{attrs:{href:"http://myfjdthink.com/%E4%BD%BF%E7%94%A8-typescript-%E5%81%9A%E5%90%8E%E7%AB%AF%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/",target:"_blank",rel:"noopener noreferrer"}},[s._v("使用 typescript 做后端应用开发"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"安装准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装准备"}},[s._v("#")]),s._v(" 安装准备")]),s._v(" "),e("ol",[e("li",[s._v("typescript")])]),s._v(" "),e("p",[s._v("typescript 的安装配置这里不赘述，可以看 typescript 的官方文档。")]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("mongoose\n下载 mongoose 的类型定义文件")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ npm install mongoose --save\n$ npm install @types/mongoose --save-dev\n$ npm install @types/mongodb --save-dev\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("typescript 的 tsd 的组织方式一直在变化，目前的方式算是比较简单的，typescript 官方把常见的库 Definition 都放在 npm 上了。")]),s._v(" "),e("h2",{attrs:{id:"model-的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#model-的定义"}},[s._v("#")]),s._v(" Model 的定义")]),s._v(" "),e("p",[s._v("以一个 User Model 为例。")]),s._v(" "),e("h3",{attrs:{id:"先定义一个接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先定义一个接口"}},[s._v("#")]),s._v(" 先定义一个接口")]),s._v(" "),e("p",[s._v("src/interfaces/User.ts:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("export interface IUser {\n  createdAt?: Date;\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"schema-model"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#schema-model"}},[s._v("#")]),s._v(" Schema + Model")]),s._v(" "),e("p",[s._v("src/model/User.ts:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('import {Document, Schema, Model, model} from "mongoose";\nimport {IUser} from "../interfaces/User";\n\nexport interface IUserModel extends IUser, Document {\n  fullName(): string;\n}\n\nexport const UserSchema: Schema = new Schema({\n  createdAt: Date,\n  email: String,\n  firstName: {type: String, required: true},\n  lastName: {type: String, required: true}\n});\nUserSchema.pre("save", function (next) {\n  let now = new Date();\n  if (!this.createdAt) {\n    this.createdAt = now;\n  }\n  next();\n});\nUserSchema.methods.fullName = function (): string {\n  return (this.firstName.trim() + " " + this.lastName.trim());\n};\n\nexport const User: Model<IUserModel> = model<IUserModel>("User", UserSchema);\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[s._v("Mongoose 的 tsd 中是使用泛型来实现对具体 Model 的定义的，我们自己定义的 Model 是 IUser（包含数据库字段），Mongoose 提供的基础的 Model 定义是 Document（包括 find findOne 等操作） ，继承这个两个接口就是最后的 Model 啦。")]),s._v(" "),e("p",[s._v("有个比较尴尬的地方是：Mongoose 的 Schema 定义和 IUser 的定义是非常相似却又不是同一个东西，你需要写两遍属性定义。而且应该会经常改了一处忘了另一处。")]),s._v(" "),e("p",[s._v("这里提供一个解决方案是："),e("strong",[s._v("用代码生成器根据 Schema 来生成 Interface 。")])]),s._v(" "),e("p",[s._v("只提供思路，不给实现。")]),s._v(" "),e("h2",{attrs:{id:"run-起来"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run-起来"}},[s._v("#")]),s._v(" RUN 起来")]),s._v(" "),e("p",[s._v("引入 User Model。")]),s._v(" "),e("p",[s._v("src/app.js：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import * as mongoose from 'mongoose'\n// mongoose.Promise = global.Promise;\nimport {User} from './model/User'\nmongoose.connect('mongodb://localhost:57017/test');\n\nconst db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', async function () {\n  console.log('we\\'re connected!');\n  try {\n    await User.remove({})\n    const user = new User({firstName: 'feng', lastName: 'nick', email: 'jfeng@kalengo.com'})\n    await user.save()\n    const fuser = await User.findOne({})\n    console.log('email', user.email);\n    console.log('email err', user.email2);\n    console.log('email', fuser.email);\n    console.log('fullName', fuser.fullName());\n    console.log('lastName', fuser.lastName);\n    console.log('createdAt', fuser.createdAt);\n  } catch (err) {\n    console.log('err ', err.stack);\n  }\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("p",[s._v("一切正常。")]),s._v(" "),e("h2",{attrs:{id:"得到了什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#得到了什么"}},[s._v("#")]),s._v(" 得到了什么")]),s._v(" "),e("h3",{attrs:{id:"智能提示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#智能提示"}},[s._v("#")]),s._v(" 智能提示")]),s._v(" "),e("p",[s._v("IDE 会根据 IUser 的结构来智能提示，终于不用怕很长的字段名啦")]),s._v(" "),e("p",[e("img",{attrs:{src:t(477),alt:"-1495698476220.png"}})]),s._v(" "),e("h3",{attrs:{id:"类型检查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型检查"}},[s._v("#")]),s._v(" 类型检查")]),s._v(" "),e("p",[s._v("属性不存在")]),s._v(" "),e("p",[e("img",{attrs:{src:t(478),alt:"-1495698511451.png"}})]),s._v(" "),e("p",[s._v("类型不匹配")]),s._v(" "),e("p",[e("img",{attrs:{src:t(479),alt:"-1495698573491.png"}})]),s._v(" "),e("p",[s._v("OK， 这样就实现文章开头提到的目的啦。")]),s._v(" "),e("h2",{attrs:{id:"源码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[s._v("#")]),s._v(" 源码")]),s._v(" "),e("p",[s._v("见 "),e("a",{attrs:{href:"https://github.com/myfjdthink/typescript-mongoose",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/myfjdthink/typescript-mongoose"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"参考文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),e("p",[e("a",{attrs:{href:"http://brianflove.com/2016/10/04/typescript-declaring-mongoose-schema-model/",target:"_blank",rel:"noopener noreferrer"}},[s._v("TypeScript: Declaring Mongoose Schema + Model"),e("OutboundLink")],1)]),s._v(" "),e("p",[e("a",{attrs:{href:"http://mongoosejs.com/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("mongoose 文档"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);