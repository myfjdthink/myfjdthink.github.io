(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{633:function(s,n,a){"use strict";a.r(n);var e=a(2),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"使用注解简化-mongoose-事务的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用注解简化-mongoose-事务的使用"}},[s._v("#")]),s._v(" 使用注解简化 Mongoose 事务的使用")]),s._v(" "),n("h2",{attrs:{id:"mongoose-提供的事务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongoose-提供的事务"}},[s._v("#")]),s._v(" mongoose 提供的事务")]),s._v(" "),n("p",[s._v("MongoDB 4.0 开始提供了事务支持，mongoose 也提供了相应的实现，不过目前的写法还是比较繁琐。")]),s._v(" "),n("p",[s._v("我们看一下 mongoose 给出的 demo")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const Customer = db.model('Customer', new Schema({ name: String }));\n\nlet session = null;\nreturn Customer.createCollection().\n  then(() => db.startSession()).\n  then(_session => {\n    session = _session;\n    // Start a transaction\n    session.startTransaction();\n    // This `create()` is part of the transaction because of the `session`\n    // option.\n    return Customer.create([{ name: 'Test' }], { session: session });\n  }).\n  // Transactions execute in isolation, so unless you pass a `session`\n  // to `findOne()` you won't see the document until the transaction\n  // is committed.\n  then(() => Customer.findOne({ name: 'Test' })).\n  then(doc => assert.ok(!doc)).\n  // This `findOne()` will return the doc, because passing the `session`\n  // means this `findOne()` will run as part of the transaction.\n  then(() => Customer.findOne({ name: 'Test' }).session(session)).\n  then(doc => assert.ok(doc)).\n  // Once the transaction is committed, the write operation becomes\n  // visible outside of the transaction.\n  then(() => session.commitTransaction()).\n  then(() => Customer.findOne({ name: 'Test' })).\n  then(doc => assert.ok(doc));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("这个 demo 暴露了两个问题：")]),s._v(" "),n("ol",[n("li",[s._v("需要为每一个事务里做提交和回滚的处理")]),s._v(" "),n("li",[s._v("事务是用 session 来区分的，你需要一直传递 session")])]),s._v(" "),n("h2",{attrs:{id:"使用注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用注解"}},[s._v("#")]),s._v(" 使用注解")]),s._v(" "),n("p",[s._v("所以 akajs 提供了一个事务的注解来简化这个处理流程。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import * as mongoose from 'mongoose'\nimport {Schema} from 'mongoose'\nimport * as assert from 'assert'\nimport {Transactional, getSession} from './decorators/Transactional'\n\nmongoose.connect('mongodb://localhost:27017,localhost:27018,localhost:27019/test?replicaSet=rs', {useNewUrlParser: true})\nmongoose.set('debug', true)\nlet db = mongoose.connection\nconst Customer = db.model('Customer', new Schema({name: String}))\n\nclass ClassA {\n  @Transactional()\n  async main (key) {\n    await new Customer({name: 'ClassA'}).save({session: getSession()})\n    const doc1 = await Customer.findOne({name: 'ClassA'})\n    assert.ok(!doc1)\n    await new ClassB().step2()\n    return key\n  }\n}\n\nclass ClassB {\n  async step2 () {\n    const doc2 = await Customer.findOne({name: 'ClassA'}).session(getSession())\n    assert.ok(doc2)\n    await Customer.remove({}).session(getSession())\n  }\n}\n\nnew ClassA().main('aaa').then((res) => {\n  console.log('res', res)\n  mongoose.disconnect(console.log)\n}).catch(console.error)\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("解析：")]),s._v(" "),n("ul",[n("li",[s._v("@Transactional() 注解会自动提交或回滚事务（发生异常时）。具体实现见"),n("a",{attrs:{href:"https://github.com/kaolalicai/akajs/blob/master/packages/mongoose/decorators/Transactional.ts",target:"_blank",rel:"noopener noreferrer"}},[s._v("Transactional.ts"),n("OutboundLink")],1),s._v(" ，核心实现部分，使用 try catch 捕获异常，实现自动回滚。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("try {\n  const value = await originalMethod.apply(this, [...args])\n  // Since the mutations ran without an error, commit the transaction.\n  await session.commitTransaction()\n  // Return any value returned by `mutations` to make this function as transparent as possible.\n  return value\n} catch (error) {\n  // Abort the transaction as an error has occurred in the mutations above.\n  await session.abortTransaction()\n  // Rethrow the error to be caught by the caller.\n  throw error\n} finally {\n  // End the previous session.\n  session.endSession()\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("ul",[n("li",[s._v("为了避免嵌套调用时，你需要一直传递 session 的尴尬~，akajs 提供全局的 getSession() 方法，其实现原理是依赖 "),n("a",{attrs:{href:"https://nodejs.org/api/async_hooks.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Async Hooks"),n("OutboundLink")],1),s._v(" ，是 Node 的实验性特性，")])]),s._v(" "),n("p",[s._v("你对此介意的话，请不要在生产环境使用。\n"),n("strong",[s._v("注意")]),s._v(" mongodb 的事务必须在复制集上使用，在开发环境启动 mongodb 复制集，推荐使用 "),n("a",{attrs:{href:"https://www.npmjs.com/package/run-rs",target:"_blank",rel:"noopener noreferrer"}},[s._v("run-rs"),n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"更进一步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更进一步"}},[s._v("#")]),s._v(" 更进一步")]),s._v(" "),n("p",[s._v("当然，在每一个需要 Session 的地方调用 getSession() 方法还是稍显累赘，我们可以通过 wrap mongoose 的各个方法，来实现自动注入 session。")]),s._v(" "),n("p",[s._v("例如把 mongoose 的 findOne 方法替换为")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let originFindOne = mongoose.findOne\nmongoose.findOne = () => {\noriginFindOne().session(getSession())\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("但是工作量有些多，暂时没时间做。")])])}),[],!1,null,null,null);n.default=t.exports}}]);