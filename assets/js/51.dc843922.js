(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{595:function(t,e,a){"use strict";a.r(e);var r=a(2),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"快速搭建一个监控服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速搭建一个监控服务"}},[t._v("#")]),t._v(" 快速搭建一个监控服务")]),t._v(" "),e("h3",{attrs:{id:"快速搭建一个监控服务-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速搭建一个监控服务-2"}},[t._v("#")]),t._v(" 快速搭建一个监控服务")]),t._v(" "),e("p",[t._v("业务需要，要监控服务每个接口的访问速度和每个接口所花费的时间。同事推荐 statsd ＋ graphite ＋ docker 组合，花了点时间收集一下相关的信息，尝试在阿里云上把这个服务搭建起来。")]),t._v(" "),e("h4",{attrs:{id:"整个服务的三个关键步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整个服务的三个关键步骤"}},[t._v("#")]),t._v(" 整个服务的三个关键步骤：")]),t._v(" "),e("p",[t._v("运行服务（阿里云+docker）")]),t._v(" "),e("p",[t._v("发送数据（node）")]),t._v(" "),e("p",[t._v("收集展示数据（statsd + graphite）")]),t._v(" "),e("h4",{attrs:{id:"一-安装运行服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-安装运行服务"}},[t._v("#")]),t._v(" 一 安装运行服务：")]),t._v(" "),e("h6",{attrs:{id:"需要的文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需要的文档"}},[t._v("#")]),t._v(" 需要的文档")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("StatsD：是用来收集数据的，收集完数据就发送到其他服务器进行处理。 "),e("a",{attrs:{href:"http://blog.csdn.net/puncha/article/details/9083061",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://blog.csdn.net/puncha/article/details/9083061"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("Graphite ：数据分析和报表，使用实例："),e("a",{attrs:{href:"http://blog.csdn.net/puncha/article/details/9137001",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://blog.csdn.net/puncha/article/details/9137001"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("Graphite API ：Graphite有自己的一套 API，这套 API 可以快速地生成报表。 API 文档 "),e("a",{attrs:{href:"http://graphite-api.readthedocs.org/en/latest/functions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://graphite-api.readthedocs.org/en/latest/functions.html"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("statsd-graphite ：上面提到的服务不需要自己安装，已经有人做好了 docker 镜像了，集成了statsd graphite 服务。"),e("a",{attrs:{href:"https://hub.docker.com/r/hopsoft/graphite-statsd/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://hub.docker.com/r/hopsoft/graphite-statsd/"),e("OutboundLink")],1),t._v("。参考里面的文档，下载后运行就可以使用 statsd + graphite 服务了。")])]),t._v(" "),e("li",[e("p",[t._v("docker：Docker相关的问题， 可以看看这篇文档，从入门到实践 "),e("a",{attrs:{href:"http://dockerpool.com/static/books/docker_practice/install/ubuntu.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://dockerpool.com/static/books/docker_practice/install/ubuntu.html"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("在阿里云上安装 docker 有些地方需要注意 "),e("a",{attrs:{href:"http://blog.csdn.net/minimicall/article/details/40108305",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://blog.csdn.net/minimicall/article/details/40108305"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("node-statsd-client ：发送数据也有现成的一个npm包， 是 express 中间件，用于发送信息，如每个接口的访问次数和耗时。详见")])])]),t._v(" "),e("p",[t._v("npm "),e("a",{attrs:{href:"https://github.com/msiebuhr/node-statsd-client",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/msiebuhr/node-statsd-client"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("使用例子 "),e("a",{attrs:{href:"http://blog.csdn.net/puncha/article/details/9137001",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://blog.csdn.net/puncha/article/details/9137001"),e("OutboundLink")],1),t._v("\n在服务都安装好之后，需要在 sails 里安装 express 的中间件 node-statsd-client 用于发送数据。")]),t._v(" "),e("p",[t._v("怎么安装？ sails 有文档 "),e("a",{attrs:{href:"http://sailsjs.org/documentation/concepts/middleware",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://sailsjs.org/documentation/concepts/middleware"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v("这里给个示例，修改 sails 项目下的 config/http.js 文件。")]),t._v(" "),e("p",[t._v("初始化：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1.var SDC = new require('statsd-client');2.var statsdClient = new SDC({ host: '112.74.207.91', port: 8125, debug: false }).getChildClient('koala');\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("添加一个中间件，中间件过滤每个请求，这里做了个比较巧妙的事情，在中间件里替换了 res.end 方法，就可以在响应的时候发送数据了。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('1.statsd_client: function (req, res, next) {2. var startTime = new Date();3. // Shadow end request4. var end = res.end;5. res.end = function () {6.   end.apply(res, arguments);7.   // Statistics the status code, especailly for 500, 4048.   statsdClient.increment(\'status_codes.\' + res.statusCode);9.   var timeElapse = new Date() - startTime;10.   if (req.route && req.route.path) {11.     var path = req.route.path;12.     if (Object.prototype.toString.call(path) === \'[object RegExp]\') {13.       path = path.source;14.     }15.     if (path === "/") {16.       path = "root";17.     }18.     // Statistics the page hit count and time to render the page19.     var key = \'pages.\' + req.method.toLowerCase() + \'_\' + path.replace(/:/g, "").replace(/\\//, "").replace(/\\//g, "_");20.     statsdClient.timing(key, timeElapse);21.     if (res.statusCode === 404) {22.       var key404 = \'404.\' + req.method.toLowerCase() + \'_\' + path.replace(/:/g, "").replace(/\\//, "").replace(/\\//g, "_");23.       statsdClient.increment(key404);24.     }25.   }26. };27. next();28.},\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("上面的代码中一个发送了三个计数器")]),t._v(" "),e("ul",[e("li",[t._v("pages.*")]),t._v(" "),e("li",[t._v("statusCode.*")]),t._v(" "),e("li",[t._v("users.*\n比较重要的方法是")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1.statsdClient.timing(key, timeElapse);2.3.statsdClient.increment(key404);\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("发送数据是直接调用 statsd-client 包提供的方法。")]),t._v(" "),e("p",[t._v("这个两个方法是记录请求的响应时长和记录 404 状态的次数。")]),t._v(" "),e("p",[t._v("数据发送就搞定了。")]),t._v(" "),e("p",[t._v("接下来在 Graphite 的 dashboard 做几个统计，这里提供接口 api")]),t._v(" "),e("p",[t._v("查看过去一段时间内平均访问次数最高的10个接口：highestAverage(stats.timers.koala.pages.*.count,10)")]),t._v(" "),e("p",[t._v("查看过去一段时间内平均耗时最多的5个接口：highestAverage(stats.timers.koala.pages.*.mean,5)")]),t._v(" "),e("p",[t._v("一天内所有接口的访问次数：sumSeries(summarize(stats.timers.koala.pages.*.count,”1d”))")])])}),[],!1,null,null,null);e.default=s.exports}}]);