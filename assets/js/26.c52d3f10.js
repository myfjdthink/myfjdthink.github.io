(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{441:function(e,t,r){e.exports=r.p+"assets/img/-1472367005660.bd696091.png"},442:function(e,t,r){e.exports=r.p+"assets/img/-1472367729401.a48469d1.png"},443:function(e,t,r){e.exports=r.p+"assets/img/-1472367768868.4063d6c6.png"},611:function(e,t,r){"use strict";r.r(t);var a=r(2),s=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"大家一起来-leetcode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大家一起来-leetcode"}},[e._v("#")]),e._v(" 大家一起来 Leetcode")]),e._v(" "),t("h1",{attrs:{id:"大家一起来-leetcode-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大家一起来-leetcode-2"}},[e._v("#")]),e._v(" 大家一起来 Leetcode")]),e._v(" "),t("p",[e._v("Leetcode 是一个提供 Online Judge 服务的网站，里面的题目都是一些经典的公司用来面试应聘者的面试题。")]),e._v(" "),t("p",[e._v("除了应付面试，很多人想要锻炼自己的算法和编程能力时也会选择在 Leetcode 上刷题。")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://leetcode.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://leetcode.com/"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"leetcode的题大致分成两类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#leetcode的题大致分成两类"}},[e._v("#")]),e._v(" LeetCode的题大致分成两类：")]),e._v(" "),t("h3",{attrs:{id:"_1-基础算法的知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础算法的知识"}},[e._v("#")]),e._v(" 1）基础算法的知识")]),e._v(" "),t("p",[e._v("这些题里面有大量的算法题，解这些题一般有以下套路：")]),e._v(" "),t("ul",[t("li",[e._v("递归（深度优先DFS，广度优先BFS）")]),e._v(" "),t("li",[e._v("动态规划（Dynamic Programming）")]),e._v(" "),t("li",[e._v("拆半查找（Binary Search）")]),e._v(" "),t("li",[e._v("回溯（Back tracing）")]),e._v(" "),t("li",[e._v("分治法（Divide and Conquer）")]),e._v(" "),t("li",[e._v("还有大量的对树，数组、链表、字符串和hash表的操作。\n通过做这些题能让你对这些最基础的算法的思路有非常扎实的了解和训练。")])]),e._v(" "),t("h3",{attrs:{id:"_2-编程题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-编程题"}},[e._v("#")]),e._v(" 2）编程题")]),e._v(" "),t("p",[e._v("比如：atoi，strstr，add two num，括号匹配，字符串乘法，通配符匹配，文件路径简化，Text Justification，反转单词等等，这些题的Edge Case, Corner Case有很多。这些题需要你想清楚了再干，只要你稍有疏忽，就会有几个case让你痛不欲生，而且一不小心就会让你的代码会写得又臭又长，无法阅读。通过做这些题，可以非常好的训练你对各种情况的考虑，以及你对程序代码组织的掌控（其实就是其中的状态变量）。")]),e._v(" "),t("h2",{attrs:{id:"做个题体验一下吧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#做个题体验一下吧"}},[e._v("#")]),e._v(" 做个题体验一下吧")]),e._v(" "),t("h3",{attrs:{id:"挑个题目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#挑个题目"}},[e._v("#")]),e._v(" 挑个题目")]),e._v(" "),t("p",[e._v("反转二叉树 "),t("a",{attrs:{href:"https://leetcode.com/problems/invert-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Invert Binary Tree"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("关于这道题还有个有趣的小故事：")]),e._v(" "),t("p",[e._v("Homebrew 的作者去 Google 面试，因为没有在白板上做出这道题所以没通过面试。")]),e._v(" "),t("p",[t("img",{attrs:{src:r(441),alt:"-1472367005660.png"}})]),e._v(" "),t("h3",{attrs:{id:"准备测试数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备测试数据"}},[e._v("#")]),e._v(" 准备测试数据")]),e._v(" "),t("p",[e._v("LeetCode 支持自定义测试数据，在准备二叉树的测试数据时，你可以这样写：")]),e._v(" "),t("p",[t("code",[e._v("[5,4,7,3,null,2,null,-1,null,9]")])]),e._v(" "),t("p",[e._v("对应的 二叉树是：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("       5      / \\     4   7    /   /   3   2  /   / -1  9\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("文档： "),t("a",{attrs:{href:"https://leetcode.com/faq/#binary-tree",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://leetcode.com/faq/#binary-tree"),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"写代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写代码"}},[e._v("#")]),e._v(" 写代码")]),e._v(" "),t("p",[e._v("这道题的一般思路是用使用递归，这个给一个 Python 的 版本：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# Definition for a binary tree node.# class TreeNode(object):#     def __init__(self, x):#         self.val = x#         self.left = None#         self.right = Noneclass Solution(object):    def invertTree(self, root):        """        :type root: TreeNode        :rtype: TreeNode        """        if (root == None): return None        temp = self.invertTree(root.left)        root.left = self.invertTree(root.right)        root.right = temp        return root\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h3",{attrs:{id:"查看结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看结果"}},[e._v("#")]),e._v(" 查看结果")]),e._v(" "),t("p",[e._v("如果代码没有通过所有 Case， LeetCode 会明确地告诉你哪一个 Case 没有通过。")]),e._v(" "),t("p",[e._v("如果代码通过了所有 Case , 你还可以查看 More Detail")]),e._v(" "),t("p",[t("img",{attrs:{src:r(442),alt:"-1472367729401.png"}})]),e._v(" "),t("p",[e._v("可以看到在使用同类语言的代码中，你的代码耗时在哪一个阶段。")]),e._v(" "),t("p",[e._v("这一次的成绩还不错，比其他 80% 的人要快。"),t("img",{attrs:{src:r(443),alt:"-1472367768868.png"}})]),e._v(" "),t("h2",{attrs:{id:"收获"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#收获"}},[e._v("#")]),e._v(" 收获？")]),e._v(" "),t("p",[e._v("有人分享了他的收获："),t("a",{attrs:{href:"http://coolshell.cn/articles/12052.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Leetcode 编程训练"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);