(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{444:function(e,r,a){e.exports=a.p+"assets/img/-1477050257372.ba5f0c34.png"},613:function(e,r,a){"use strict";a.r(r);var t=a(2),n=Object(t.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"js-里怎么给数组填充默认值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js-里怎么给数组填充默认值"}},[e._v("#")]),e._v(" JS 里怎么给数组填充默认值？")]),e._v(" "),r("p",[e._v("今天看到一段代码：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("Array.apply(null, Array(30)).map(() => 4)\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("这代码的写法无法让人一下理解它的意图。")]),e._v(" "),r("p",[e._v("Google 之后知道它的作用是构造一个长度为 30 的数组，默认值是 4。")]),e._v(" "),r("h4",{attrs:{id:"解析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解析"}},[e._v("#")]),e._v(" 解析")]),e._v(" "),r("p",[e._v("但是为什么要写得这么别扭呢？我们来分解下它每一步在做什么：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("Array.apply(null, Array(30)) \n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("这一段代码生成一个长度为30的数组，里面的值都是 "),r("strong",[e._v("undefined")]),e._v("。")]),e._v(" "),r("p",[e._v("之后的 "),r("code",[e._v(".map(() => 4)")]),e._v(" ：负责填充默认值")]),e._v(" "),r("p",[e._v("但是为什么构造一个空值数组需要这么麻烦呢？还要用上 apply 方法，尝试用 "),r("code",[e._v("Array(30).map(() => 4)")]),e._v(" 来生成数组的话，你会得到这样的一个结果，根本就没有值。")]),e._v(" "),r("blockquote",[r("p",[e._v("[ , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ]")])]),e._v(" "),r("p",[e._v("查看"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[e._v("文档"),r("OutboundLink")],1),e._v(" 可以看到 Array 的构造函数语法，可以得知 Array 支持两种构造方式。使用参数形式给定 N 个数组元素，或者给定一个数组长度。")]),e._v(" "),r("p",[e._v("不过比较重要的一点文档里没提到，使用 "),r("code",[e._v("new Array(arrayLength)")]),e._v(" 方式构造的数组是一个"),r("strong",[e._v("稀疏数组")]),e._v("，里面是没有任何值的，只有长度。所以这个方式构造出来的数组是无法遍历的，也就无法用 map 遍历填充值了。"),r("img",{attrs:{src:a(444),alt:"-1477050257372.png"}})]),e._v(" "),r("p",[e._v("知道了上述的原因，我们就能理解：")]),e._v(" "),r("p",[r("code",[e._v("Array.apply(null, Array(30))")])]),e._v(" "),r("p",[e._v("其实等于")]),e._v(" "),r("p",[r("code",[e._v("Array.apply(null, [, , , , , , , , , , , , , , , , , , , , , , , , , , , , ,]))")])]),e._v(" "),r("p",[e._v("然后我们要继续了解 apply 方法，在这里可以看 apply 的作用 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply",target:"_blank",rel:"noopener noreferrer"}},[e._v("文档解释"),r("OutboundLink")],1),e._v("， 这里不作介绍。apply 方法会把生成的稀疏数组展开并当做参数再次传给 Array 的构造函数，就是这样子：")]),e._v(" "),r("p",[r("code",[e._v("Array(null,null,null......))")])]),e._v(" "),r("p",[e._v("这样最终就会得到一个数组，这样就不是稀疏数组了，里面是有值的，虽然是 undefined。")]),e._v(" "),r("blockquote",[r("p",[e._v("[ undefined, undefined, undefined ……]")])]),e._v(" "),r("h4",{attrs:{id:"结语"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[e._v("#")]),e._v(" 结语")]),e._v(" "),r("p",[e._v("总结下，其实就是 js 的 Array 的默认构造函数生成的是稀疏数组，是无法用 map 遍历填充的。所以才写得这么绕。")]),e._v(" "),r("p",[e._v("不过，说了这么多，要实现原本的需求，其实有更简单的方法啦：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("Array(30).fill(4)\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("fill 方法的"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/fill",target:"_blank",rel:"noopener noreferrer"}},[e._v("说明"),r("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=n.exports}}]);