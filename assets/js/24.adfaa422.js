(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{435:function(t,s,e){t.exports=e.p+"assets/img/-1468489265899.3dc828f2.png"},436:function(t,s,e){t.exports=e.p+"assets/img/-1468489826359.626553c9.png"},437:function(t,s,e){t.exports=e.p+"assets/img/-1468491422766.e53daf4a.png"},438:function(t,s,e){t.exports=e.p+"assets/img/-1468491196821.1cd07fe1.png"},609:function(t,s,e){"use strict";e.r(s);var o=e(2),a=Object(o.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"使用-git-hooks-触发-jenkins-构建任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-git-hooks-触发-jenkins-构建任务"}},[t._v("#")]),t._v(" 使用 Git Hooks 触发 Jenkins 构建任务")]),t._v(" "),s("h2",{attrs:{id:"使用-git-hooks-触发-jenkins-构建任务-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-git-hooks-触发-jenkins-构建任务-2"}},[t._v("#")]),t._v(" 使用 Git Hooks 触发 Jenkins 构建任务")]),t._v(" "),s("p",[t._v("使用 Jenkins 构建任务的时候，很多任务需要根据 git 来触发。例如代码 push 到某分支后就触发 Jenkins 的集成测试。")]),t._v(" "),s("p",[t._v("下面介绍几种 Git 触发 Jenkins 的方式。")]),t._v(" "),s("h3",{attrs:{id:"git-hooks-触发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-hooks-触发"}},[t._v("#")]),t._v(" Git Hooks 触发")]),t._v(" "),s("p",[t._v("Git Hooks，即钩子，关于 Git Hooks 的详细信息，可以看看"),s("a",{attrs:{href:"https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在 Jenkins 的配置页面，勾选 "),s("code",[t._v("Trigger builds remotely")]),t._v(" 开启 Jenkins 的远程调用功能。")]),t._v(" "),s("p",[s("img",{attrs:{src:e(435),alt:"-1468489265899.png"}})]),t._v(" "),s("p",[t._v("然后编辑服务器仓库中 jenkins-tutorial.git/hooks 中的 post-update，里面调用这两个链接中的一个即可达到通知 Jenkins 构建任务的目的。该钩子脚本将在代码提交到服务器仓库后执行。")]),t._v(" "),s("h3",{attrs:{id:"jenkins-提供的监听方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-提供的监听方式"}},[t._v("#")]),t._v(" Jenkins 提供的监听方式")]),t._v(" "),s("p",[t._v("在 Jenkins 的 Build Triggers 配置页面，我们可以看到如下的配置项：")]),t._v(" "),s("p",[s("img",{attrs:{src:e(436),alt:"-1468489826359.png"}})]),t._v(" "),s("p",[t._v("Jenkins 可以监听 Github 或者 GitLab 的事件，也可以通过轮询的方式来检查代码是否有更新。")]),t._v(" "),s("h4",{attrs:{id:"轮询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#轮询"}},[t._v("#")]),t._v(" 轮询")]),t._v(" "),s("p",[t._v("轮询的方式就是定时去访问 git 仓库，检查是否有更新，这个方式太傻这里就不细说了。")]),t._v(" "),s("h4",{attrs:{id:"web-hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-hooks"}},[t._v("#")]),t._v(" Web Hooks")]),t._v(" "),s("p",[t._v("介绍一下 Jenkins 是怎么监听 Github 和 Gitlab 的吧。")]),t._v(" "),s("p",[t._v("他们主要是通过 Web Hooks 来实现触发的，Github 和 Gitlab 都支持 Webhooks 这个功能，简单来说就是在有更新事件时会调用你配置好的 URL，并把相关的信息 POST 过来。详细可以见文档："),s("a",{attrs:{href:"https://developer.github.com/webhooks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github Webhooks"),s("OutboundLink")],1),t._v(" 、 "),s("a",{attrs:{href:"https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/web_hooks/web_hooks.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gitlab Webhooks"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"gitlab-的监听配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-的监听配置"}},[t._v("#")]),t._v(" GitLab 的监听配置")]),t._v(" "),s("p",[t._v("GIthub 的监听比较简单，勾选了就可以，这里不再细说。")]),t._v(" "),s("p",[t._v("Gitlab 的配置选项就比较丰富了。")]),t._v(" "),s("p",[s("img",{attrs:{src:e(437),alt:"-1468491422766.png"}})]),t._v(" "),s("p",[t._v("在勾选了该选项后，我们就得到一个地址，这个地址就是接收 Gitlab 的 Webhooks 用的。去到 Gitlab 的 Webhooks 配置页面填上这个地址就行啦。")]),t._v(" "),s("p",[s("img",{attrs:{src:e(438),alt:"-1468491196821.png"}})]),t._v(" "),s("h4",{attrs:{id:"批评一下-git-oschina"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#批评一下-git-oschina"}},[t._v("#")]),t._v(" 批评一下 git.oschina")]),t._v(" "),s("p",[t._v("开源中国提供了个免费的 git 托管服务 "),s("a",{attrs:{href:"https://git.oschina.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git.oschina.net/"),s("OutboundLink")],1),t._v(" ，虽然这个服务是基于 Gitlab 框架修改的，但是它居然把 Webhooks 的 post 数据格式给改了。。。")]),t._v(" "),s("p",[t._v("后果就是上文提到的 Gitlab 监听就没用了。。。")]),t._v(" "),s("p",[t._v("所以我们就要自己处理 git.oschina 的 webhooks 了， 坑。")]),t._v(" "),s("p",[t._v("可以考虑写个服务把 git.oschina 的 webhooks 转成 Gitlab 的 webhooks。")]),t._v(" "),s("h2",{attrs:{id:"参考文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.lovelucy.info/auto-deploy-website-by-webhooks-of-github-and-gitlab.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.lovelucy.info/auto-deploy-website-by-webhooks-of-github-and-gitlab.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.zoakerc.com/archives/jenkins-series-trigger-build-through-git-hooks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.zoakerc.com/archives/jenkins-series-trigger-build-through-git-hooks/"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=a.exports}}]);